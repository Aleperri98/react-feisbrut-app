{"version":3,"file":"static/js/507.cb01adf3.chunk.js","mappings":"gJACA,MAAwB,qB,SCSxB,EARc,SAAC,GAAuB,IAArBA,EAAoB,EAApBA,QAASC,EAAW,EAAXA,KACxB,OACE,gBAAKC,UAAWC,EAAcC,MAAO,CAAEC,WAAW,GAAD,OAAKL,IAAtD,UACE,uBAAIC,Q,qGCLV,IAAMK,EAAW,yCAEXC,EAAO,SAACC,GAAD,OACXC,MAAMH,EAAWE,GAAUE,MAAK,SAACC,GAAD,OAAcA,EAASC,WAEnDC,EAAW,SAACL,EAAUM,GAAX,OACfL,MAAMH,EAAWE,EAAU,CACzBO,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUL,KACpBJ,MAAK,SAACC,GAAD,OAAcA,EAASC,WAE3BQ,EAAa,SAACZ,GAAD,OACjBC,MAAMH,EAAWE,EAAU,CACzBO,OAAQ,SACRC,QAAS,CACP,eAAgB,sBAEjBN,MAAK,SAACC,GAAD,OAAcA,EAASC,Y,yGCnBjC,EAA6B,+BAA7B,EAAuE,6B,SC8EvE,EAzEmB,WACjB,OAAsCS,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACA,GAAwCJ,EAAAA,EAAAA,UAAS,IAAjD,eAAOK,EAAP,KAAqBC,EAArB,KACA,GAAsCN,EAAAA,EAAAA,UAAS,IAA/C,eAAOO,EAAP,KAAoBC,EAApB,KACA,GAA2CR,EAAAA,EAAAA,WAAS,GAApD,eAAOS,EAAP,KAAuBC,EAAvB,KAqBA,OATAC,EAAAA,EAAAA,YAAU,WACRH,EAAe,CACbI,OAAQX,EACRrB,KAAMyB,EACNQ,MAAM,IAAIC,MAAOC,cACjBC,MAAOb,MAER,CAACF,EAAaE,EAAUE,KAGzB,iBAAKxB,UAAWC,EAAhB,UACG2B,IACC,SAACQ,EAAA,EAAD,CAAOtC,QAAQ,eAAeC,KAAK,iCAGrC,6BACE,iBAAKC,UAAWC,EAAhB,WACE,kBACEoC,MAAOjB,EACPkB,SAAU,SAACC,GAAD,OAAOlB,EAAekB,EAAEC,OAAOH,QACzCI,KAAK,SACLC,GAAG,SACHC,KAAK,OACLC,YAAY,SACZC,UAAQ,KAGV,kBACEP,SAAU,SAACC,GAAD,OAAOhB,EAAYgB,EAAEC,OAAOH,QACtCA,MAAOf,EACPmB,KAAK,MACLC,GAAG,MACHC,KAAK,OACLC,YAAY,aAGd,mBAAQD,KAAK,SAASG,QA9CR,SAACC,GACrBA,EAAMC,kBACNrC,EAAAA,EAAAA,IAAS,SAAUe,GACnBG,GAAiB,GAEjBoB,YAAW,WACTpB,GAAiB,KAChB,MAuCG,sBAKF,qBACEQ,MAAOb,EACPc,SAAU,SAACC,GAAD,OAAOd,EAAgBc,EAAEC,OAAOH,QAC1CI,KAAK,UACLC,GAAG,UACHQ,KAAK,KACLC,KAAK,KACLP,YAAY,UACZC,UAAQ,WClElB,EAJgB,WACd,OAAO,SAAC,EAAD","sources":["webpack://feisbrut-app/./src/components/Modal/Modal.module.scss?b72d","components/Modal/index.jsx","libs/http.js","webpack://feisbrut-app/./src/components/CreatePost/CreatePost.module.scss?ce30","components/CreatePost/index.jsx","pages/NewPost/index.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Modal\":\"Modal_Modal__ZZcE+\"};","import styles from \"./Modal.module.scss\";\n\nconst Modal = ({ bgColor, text }) => {\n  return (\n    <div className={styles.Modal} style={{ background: `${bgColor}` }}>\n      <p>{text}</p>\n    </div>\n  );\n};\n\nexport default Modal;","const BASE_URL = \"https://edgemony-backend.herokuapp.com\";\n\nconst http = (resource) =>\n  fetch(BASE_URL + resource).then((response) => response.json());\n\nconst httpPOST = (resource, data) =>\n  fetch(BASE_URL + resource, {\n    method: \"POST\",\n    headers: {\n      \"Content-type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  }).then((response) => response.json());\n\nconst httpDELETE = (resource) =>\n  fetch(BASE_URL + resource, {\n    method: \"DELETE\",\n    headers: {\n      \"Content-type\": \"application/json\",\n    },\n  }).then((response) => response.json());\n\n// Popola la lista degli amici, in base alla lista friendsNames\nconst fillFriendsList = (friendsNames) => {\n  let value = 0;\n  for (value in [...Array(friendsNames.length).keys()]) {\n    httpPOST(\"/friends\", {\n      name: friendsNames[value],\n      photo: `https://randomuser.me/api/portraits/men/${value}.jpg`,\n    });\n\n    setTimeout(() => {}, 100);\n  }\n};\n\nexport { http, httpPOST, httpDELETE, fillFriendsList };","// extracted by mini-css-extract-plugin\nexport default {\"createPost\":\"CreatePost_createPost__XwHxX\",\"__author\":\"CreatePost___author__pyHXQ\"};","import { useState, useEffect } from \"react\";\nimport { httpPOST } from \"../../libs/http\";\n\nimport Modal from \"./../Modal\";\nimport styles from \"./CreatePost.module.scss\";\n\nconst CreatePost = () => {\n  const [authorInput, setAuthorInput] = useState(\"\");\n  const [imgInput, setImgInput] = useState(\"\");\n  const [messageInput, setMessageInput] = useState(\"\");\n  const [formPostObj, setFormPostObj] = useState({});\n  const [isModalVisible, setModalVisibile] = useState(false);\n\n  const handleSendBtn = (event) => {\n    event.preventDefault();\n    httpPOST(\"/posts\", formPostObj);\n    setModalVisibile(true);\n\n    setTimeout(() => {\n      setModalVisibile(false);\n    }, 3000);\n  };\n\n  useEffect(() => {\n    setFormPostObj({\n      author: authorInput,\n      text: messageInput,\n      date: new Date().toISOString(),\n      photo: imgInput,\n    });\n  }, [authorInput, imgInput, messageInput]);\n\n  return (\n    <div className={styles.createPost}>\n      {isModalVisible && (\n        <Modal bgColor=\"lightskyblue\" text=\"Il post Ã¨ stato aggiunto\" />\n      )}\n\n      <form>\n        <div className={styles.__author}>\n          <input\n            value={authorInput}\n            onChange={(e) => setAuthorInput(e.target.value)}\n            name=\"author\"\n            id=\"author\"\n            type=\"text\"\n            placeholder=\"Author\"\n            required\n          />\n\n          <input\n            onChange={(e) => setImgInput(e.target.value)}\n            value={imgInput}\n            name=\"img\"\n            id=\"img\"\n            type=\"text\"\n            placeholder=\"Img URL\"\n          />\n\n          <button type=\"submit\" onClick={handleSendBtn}>\n            SEND\n          </button>\n        </div>\n\n        <textarea\n          value={messageInput}\n          onChange={(e) => setMessageInput(e.target.value)}\n          name=\"message\"\n          id=\"message\"\n          cols=\"30\"\n          rows=\"10\"\n          placeholder=\"Message\"\n          required\n        ></textarea>\n      </form>\n    </div>\n  );\n};\n\nexport default CreatePost;","import CreatePost from \"../../components/CreatePost\";\n\nconst NewPost = () => {\n  return <CreatePost />;\n};\n\nexport default NewPost;"],"names":["bgColor","text","className","styles","style","background","BASE_URL","http","resource","fetch","then","response","json","httpPOST","data","method","headers","body","JSON","stringify","httpDELETE","useState","authorInput","setAuthorInput","imgInput","setImgInput","messageInput","setMessageInput","formPostObj","setFormPostObj","isModalVisible","setModalVisibile","useEffect","author","date","Date","toISOString","photo","Modal","value","onChange","e","target","name","id","type","placeholder","required","onClick","event","preventDefault","setTimeout","cols","rows"],"sourceRoot":""}